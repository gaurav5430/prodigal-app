{"version":3,"sources":["utils/api-utils.js","agents-selection/AgentsSelection.js","duration-range/DurationRange.js","filtered-calls-list/FilteredCallsList.js","filtered-calls/FilteredCalls.js","labelled-calls-list/LabelledCallsList.js","labels-list/LabelsList.js","label-calls/LabelCalls.js","home/Home.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","getListOfAgentsApi","getDurationRangeApi","getFilteredCallsApi","getCallListApi","getListOfLabelsApi","applyLabelsApi","dummyUserID","applyLabels","callList","label_ops","Axios","post","concat","operation","headers","user_id","AgentsSelection","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","agents","loading","error","onAgentSelected","bind","assertThisInitialized","_this2","setState","get","then","response","data","listofagents","event","value","map","agent","key","text","_this$state","react_default","a","createElement","Dropdown","placeholder","fluid","multiple","search","selection","options","createOptions","onChange","renderAgentsList","React","Component","DurationRange","duration","radioValue","onDurationSelected","getSelectedDuration","ranges","getDurationArray","minimum","Math","round","maximum","Fragment","Checkbox","radio","radioGroup","checked","label","renderDurationRange","FilteredCallsList","handleSort","clickedColumn","column","paginatedCalls","direction","reverse","_","sortBy","pageSize","totalPages","ceil","calls","length","currentPage","slice","onPageChange","_this$state2","console","log","activePage","_this$state3","Table","Row","HeaderCell","sorted","onClick","_this$state4","colSpan","Pagination","sortable","fixed","Header","renderHeader","Body","call_id","Cell","agent_id","call_time","Footer","renderFooter","FilteredCalls","selectedAgents","selectedDuration","enabled","getFilteredCalls","isEnabled","reloadSwitch","agentList","timeRange","info","filter_agent_list","filter_time_range","filtered_calls_list_FilteredCallsList","className","agents_selection_AgentsSelection","duration_range_DurationRange","Button","disabled","renderCallsList","LabelledCallsList","initialPage","selectedCalls","call_data","callId","labelToRemove","labelToAdd","labels","Label","filter","selected","selectedCall","toConsumableArray","onRowsToggle","getSelectedCallIds","callsNew","index","objectSpread","_this3","onRowToggle","renderLabels","label_id","_this4","e","onAllRowsToggle","_this5","_this$state5","celled","renderRow","LabelsList","onLabelsSelected","unique_label_list","LabelCalls","selectedLabels","onAdd","onRemove","page","createLabelOps","action","labelOps","i","labelOp","name","op","push","labels_list_LabelsList","labelled_calls_list_LabelledCallsList","Home","react_router_dom","to","App","basename","process","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.703bda4c.chunk.js","sourcesContent":["import Axios from \"axios\";\r\n\r\nconst baseURL = \"https://damp-garden-93707.herokuapp.com/\";\r\nconst getListOfAgentsApi = \"getlistofagents\";\r\nconst getDurationRangeApi = \"getdurationrange\";\r\nconst getFilteredCallsApi = \"getfilteredcalls\";\r\nconst getCallListApi = \"getcalllist\";\r\nconst getListOfLabelsApi = \"getlistoflabels\";\r\nconst applyLabelsApi = \"applyLabels\";\r\n\r\nconst dummyUserID = \"a12345\";\r\nfunction getListOfAgents() {\r\n  return Axios.get(`${baseURL}${getListOfAgentsApi}`);\r\n}\r\n\r\nfunction getDurationRange() {\r\n  return Axios.get(`${baseURL}${getDurationRangeApi}`);\r\n}\r\n\r\nfunction getFilteredCalls(agentList, timeRange) {\r\n  return Axios.post(`${baseURL}${getFilteredCallsApi}`, {\r\n    info: {\r\n      filter_agent_list: agentList,\r\n      filter_time_range: timeRange\r\n    }\r\n  });\r\n}\r\n\r\nfunction getCallList() {\r\n  return Axios.get(`${baseURL}${getCallListApi}`, {\r\n    headers: {\r\n      user_id: dummyUserID\r\n    }\r\n  });\r\n}\r\n\r\nfunction getListOfLabels() {\r\n  return Axios.get(`${baseURL}${getListOfLabelsApi}`, {\r\n    headers: {\r\n      user_id: dummyUserID\r\n    }\r\n  });\r\n}\r\n\r\nfunction applyLabels(callList, label_ops) {\r\n  return Axios.post(\r\n    `${baseURL}${applyLabelsApi}`,\r\n    {\r\n      operation: {\r\n        callList,\r\n        label_ops\r\n      }\r\n    },\r\n    {\r\n      headers: {\r\n        user_id: dummyUserID\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nexport {\r\n  getListOfAgents,\r\n  getDurationRange,\r\n  getFilteredCalls,\r\n  getCallList,\r\n  getListOfLabels,\r\n  applyLabels\r\n};\r\n","import React from \"react\";\r\nimport { getListOfAgents } from \"../utils/api-utils\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nclass AgentsSelection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      agents: [],\r\n      loading: false,\r\n      error: false\r\n    };\r\n\r\n    this.onAgentSelected = this.onAgentSelected.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    getListOfAgents().then(response => {\r\n      this.setState({\r\n        loading: false,\r\n        agents: response.data.data.listofagents\r\n      });\r\n    });\r\n  }\r\n\r\n  onAgentSelected(event, data) {\r\n    const { onAgentSelected } = this.props;\r\n    onAgentSelected && onAgentSelected(data.value);\r\n  }\r\n\r\n  createOptions() {\r\n    const { agents } = this.state;\r\n    return agents.map(agent => {\r\n      return {\r\n        key: agent,\r\n        text: agent,\r\n        value: agent\r\n      };\r\n    });\r\n  }\r\n\r\n  renderAgentsList() {\r\n    const { loading, error } = this.state;\r\n    if (loading) {\r\n      return \"Loading agents list...\";\r\n    } else if (error) {\r\n      return \"There was an error in loading agents list\";\r\n    } else {\r\n      return (\r\n        <Dropdown\r\n          placeholder=\"Select Agents\"\r\n          fluid\r\n          multiple\r\n          search\r\n          selection\r\n          options={this.createOptions()}\r\n          onChange={this.onAgentSelected}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.renderAgentsList();\r\n  }\r\n}\r\n\r\nexport default AgentsSelection;\r\n","import React from \"react\";\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport { getDurationRange } from \"../utils/api-utils\";\r\n\r\nclass DurationRange extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      error: false,\r\n      duration: {},\r\n      radioValue: \"long\"\r\n    };\r\n\r\n    this.onDurationSelected = this.onDurationSelected.bind(this);\r\n  }\r\n\r\n  onDurationSelected(event, data) {\r\n    const { onDurationSelected } = this.props;\r\n    this.setState({ radioValue: data.value });\r\n\r\n    onDurationSelected && onDurationSelected(this.getSelectedDuration());\r\n  }\r\n\r\n  getSelectedDuration() {\r\n    const { radioValue } = this.state;\r\n    const ranges = this.getDurationArray();\r\n    let selectedDuration = [];\r\n    if (radioValue === \"short\") {\r\n      selectedDuration = [ranges[0], ranges[1]];\r\n    } else if (radioValue === \"medium\") {\r\n      selectedDuration = [ranges[0], ranges[2]];\r\n    } else {\r\n      selectedDuration = [ranges[0], ranges[3]];\r\n    }\r\n\r\n    return selectedDuration;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { onDurationSelected } = this.props;\r\n    this.setState({ loading: true });\r\n    getDurationRange().then(response => {\r\n      this.setState({ loading: false, duration: response.data.data });\r\n      onDurationSelected && onDurationSelected(this.getSelectedDuration());\r\n    });\r\n  }\r\n\r\n  getDurationArray() {\r\n    const { duration } = this.state;\r\n    const minimum = Math.round(duration.minimum);\r\n    const maximum = Math.round(duration.maximum);\r\n    const mid1 = (maximum - minimum) / 4;\r\n    const mid2 = (3 * (maximum - minimum)) / 4;\r\n    return [minimum, mid1, mid2, maximum];\r\n  }\r\n\r\n  renderDurationRange() {\r\n    const { loading, error } = this.state;\r\n    if (loading) {\r\n      return \"Loading duration list...\";\r\n    } else if (error) {\r\n      return \"There was an error in loading duration\";\r\n    } else {\r\n      const ranges = this.getDurationArray();\r\n      return (\r\n        <>\r\n          <Checkbox\r\n            radio\r\n            radioGroup=\"duration\"\r\n            checked={this.state.radioValue === \"short\"}\r\n            label={`Short (${ranges[0]} - ${ranges[1]})`}\r\n            value=\"short\"\r\n            onChange={this.onDurationSelected}\r\n          />\r\n          <Checkbox\r\n            radio\r\n            radioGroup=\"duration\"\r\n            checked={this.state.radioValue === \"medium\"}\r\n            label={`Medium (${ranges[0]} - ${ranges[2]})`}\r\n            value=\"medium\"\r\n            onChange={this.onDurationSelected}\r\n          />\r\n          <Checkbox\r\n            radio\r\n            radioGroup=\"duration\"\r\n            checked={this.state.radioValue === \"long\"}\r\n            label={`Long (${ranges[0]} - ${ranges[3]})`}\r\n            value={\"long\"}\r\n            onChange={this.onDurationSelected}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.renderDurationRange();\r\n  }\r\n}\r\n\r\nexport default DurationRange;\r\n","import React from \"react\";\r\nimport { Table, Pagination } from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\n\r\nclass FilteredCallsList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const pageSize = 10;\r\n    this.state = {\r\n      pageSize: pageSize,\r\n      totalPages: Math.ceil(props.calls.length / pageSize),\r\n      currentPage: 1,\r\n\r\n      loading: false,\r\n      error: false,\r\n      calls: props.calls,\r\n      paginatedCalls: props.calls.slice(0, pageSize),\r\n\r\n      column: null,\r\n      direction: null\r\n    };\r\n\r\n    this.onPageChange = this.onPageChange.bind(this);\r\n  }\r\n\r\n  onPageChange(event, data) {\r\n    const { calls, pageSize } = this.state;\r\n    console.log(data);\r\n    const activePage = data.activePage;\r\n    const paginatedCalls = calls.slice(\r\n      (activePage - 1) * pageSize,\r\n      activePage * pageSize\r\n    );\r\n    this.setState({ currentPage: data.activePage, paginatedCalls });\r\n    const { onPageChange } = this.props;\r\n    onPageChange && onPageChange(data.activePage);\r\n  }\r\n\r\n  handleSort = clickedColumn => () => {\r\n    const { column, paginatedCalls, direction } = this.state;\r\n\r\n    if (column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        paginatedCalls: _.sortBy(paginatedCalls, [clickedColumn]),\r\n        direction: \"ascending\"\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      paginatedCalls: paginatedCalls.reverse(),\r\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\r\n    });\r\n  };\r\n\r\n  renderHeader() {\r\n    const { direction, column } = this.state;\r\n    return (\r\n      <Table.Row>\r\n        <Table.HeaderCell\r\n          sorted={column === \"agent_id\" ? direction : null}\r\n          onClick={this.handleSort(\"agent_id\")}\r\n        >\r\n          Agent Id\r\n        </Table.HeaderCell>\r\n        <Table.HeaderCell\r\n          sorted={column === \"call_id\" ? direction : null}\r\n          onClick={this.handleSort(\"call_id\")}\r\n        >\r\n          Call Id\r\n        </Table.HeaderCell>\r\n        <Table.HeaderCell\r\n          sorted={column === \"call_time\" ? direction : null}\r\n          onClick={this.handleSort(\"call_time\")}\r\n        >\r\n          Call Time\r\n        </Table.HeaderCell>\r\n      </Table.Row>\r\n    );\r\n  }\r\n\r\n  renderFooter() {\r\n    const { totalPages, currentPage } = this.state;\r\n    return (\r\n      <Table.Row>\r\n        <Table.HeaderCell colSpan=\"3\">\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            activePage={currentPage}\r\n            onPageChange={this.onPageChange}\r\n          />\r\n        </Table.HeaderCell>\r\n      </Table.Row>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { paginatedCalls } = this.state;\r\n    return (\r\n      <Table sortable fixed>\r\n        <Table.Header>{this.renderHeader()}</Table.Header>\r\n        <Table.Body>\r\n          {paginatedCalls.map(call => {\r\n            return (\r\n              <Table.Row key={call.call_id}>\r\n                <Table.Cell> {call.agent_id} </Table.Cell>\r\n                <Table.Cell> {call.call_id}</Table.Cell>\r\n                <Table.Cell> {call.call_time} </Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n        <Table.Footer>{this.renderFooter()}</Table.Footer>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilteredCallsList;\r\n","import React from \"react\";\r\nimport { getFilteredCalls } from \"../utils/api-utils\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport \"./FilteredCalls.css\";\r\nimport AgentsSelection from \"../agents-selection/AgentsSelection\";\r\nimport DurationRange from \"../duration-range/DurationRange\";\r\nimport FilteredCallsList from \"../filtered-calls-list/FilteredCallsList\";\r\n\r\nclass FilteredCalls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      error: false,\r\n      calls: [],\r\n\r\n      selectedAgents: [],\r\n      selectedDuration: [],\r\n      enabled: false\r\n    };\r\n\r\n    this.onDurationSelected = this.onDurationSelected.bind(this);\r\n    this.onAgentSelected = this.onAgentSelected.bind(this);\r\n    this.getFilteredCalls = this.getFilteredCalls.bind(this);\r\n  }\r\n\r\n  onAgentSelected(data) {\r\n    this.setState({ selectedAgents: data });\r\n    this.setState({\r\n      enabled: this.isEnabled(data, this.state.selectedDuration)\r\n    });\r\n  }\r\n\r\n  onDurationSelected(data) {\r\n    this.setState({ selectedDuration: data });\r\n    this.setState({ enabled: this.isEnabled(this.state.selectedAgents, data) });\r\n  }\r\n\r\n  getFilteredCalls() {\r\n    const { reloadSwitch } = this.state;\r\n    this.setState({ loading: true });\r\n    const { selectedAgents, selectedDuration } = this.state;\r\n\r\n    getFilteredCalls(selectedAgents, selectedDuration).then(response => {\r\n      this.setState({ loading: false, calls: response.data.data });\r\n      if (reloadSwitch) {\r\n        this.setState({ reloadSwitch: 0 });\r\n      } else {\r\n        this.setState({ reloadSwitch: 1 });\r\n      }\r\n    });\r\n  }\r\n\r\n  renderCallsList() {\r\n    const { calls, reloadSwitch, loading, error } = this.state;\r\n    if (loading) {\r\n      return \"Loading calls list...\";\r\n    } else if (error) {\r\n      return \"There was an error loading calls list\";\r\n    } else if (calls.length) {\r\n      return <FilteredCallsList calls={calls} key={reloadSwitch} />;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  isEnabled(selectedAgents, selectedDuration) {\r\n    return selectedAgents.length > 0 && selectedDuration.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { loading, error, calls, enabled } = this.state;\r\n    let className = \"FilteredCalls\";\r\n    if (loading || error || calls.length) {\r\n      className = \"FilteredCalls FilteredCalls--sidebar\";\r\n    }\r\n    return (\r\n      <div className={className}>\r\n        <div className=\"FilteredCalls__criteria\">\r\n          <div className=\"FilteredCalls__criteria-list\">\r\n            <div className=\"FilteredCalls__agentsList\">\r\n              <div className=\"FilteredCalls__criteria-title\">Select agents</div>\r\n              <AgentsSelection onAgentSelected={this.onAgentSelected} />\r\n            </div>\r\n            <div className=\"FilteredCalls__duration\">\r\n              <div className=\"FilteredCalls__criteria-title\">\r\n                Select duration\r\n              </div>\r\n              <DurationRange onDurationSelected={this.onDurationSelected} />\r\n            </div>\r\n          </div>\r\n          <div className=\"FilteredCalls__actions\">\r\n            <Button onClick={this.getFilteredCalls} disabled={!enabled}>\r\n              Get Filtered Calls\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"FilteredCalls__calls\">{this.renderCallsList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilteredCalls;\r\n","import React from \"react\";\r\nimport { getCallList } from \"../utils/api-utils\";\r\nimport { Table, Label, Icon, Checkbox, Pagination } from \"semantic-ui-react\";\r\n\r\nclass LabelledCallsList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pageSize: 10,\r\n      totalPages: 0,\r\n      currentPage: props.initialPage,\r\n      loading: false,\r\n      error: false,\r\n      calls: [],\r\n      paginatedCalls: [],\r\n      selectedCalls: []\r\n    };\r\n\r\n    this.onPageChange = this.onPageChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { pageSize, currentPage } = this.state;\r\n    this.setState({ loading: true });\r\n    getCallList().then(response => {\r\n      const calls = response.data.data.call_data;\r\n      this.setState({\r\n        loading: false,\r\n        calls: calls,\r\n        paginatedCalls: calls.slice(\r\n          (currentPage - 1) * pageSize,\r\n          currentPage * pageSize\r\n        ),\r\n        totalPages: Math.ceil(calls.length / pageSize)\r\n      });\r\n    });\r\n  }\r\n\r\n  onLabelRemove(callId, labelToRemove) {}\r\n\r\n  onLabelAdd(callId, labelToAdd) {}\r\n\r\n  renderLabels(callId, labels) {\r\n    return labels.map(label => {\r\n      return (\r\n        <Label key={label}>\r\n          {label}\r\n          {/* <Icon\r\n            name=\"delete\"\r\n            onClick={() => this.onLabelRemove(callId, label)}\r\n          /> */}\r\n        </Label>\r\n      );\r\n    });\r\n  }\r\n\r\n  getSelectedCallIds(calls) {\r\n    const selectedCallIds = calls\r\n      .filter(call => call.selected === true)\r\n      .map(call => call.call_id);\r\n    return selectedCallIds;\r\n  }\r\n\r\n  onRowToggle(data, selectedCall) {\r\n    console.log(\"selected row: \", selectedCall, data);\r\n    const { calls } = this.state;\r\n    // set all checked\r\n    const call = calls.filter(call => call.call_id === selectedCall.call_id)[0];\r\n    call.selected = data.checked;\r\n    this.setState({\r\n      calls: [...calls]\r\n    });\r\n\r\n    const { onRowsToggle } = this.props;\r\n    onRowsToggle && onRowsToggle(this.getSelectedCallIds(calls));\r\n  }\r\n\r\n  onAllRowsToggle(data) {\r\n    console.log(\"All rows selected:\", data);\r\n    const { calls, pageSize, currentPage } = this.state;\r\n    // get this row, and set checked\r\n\r\n    const callsNew = calls.map((call, index) => {\r\n      if (\r\n        index >= (currentPage - 1) * pageSize &&\r\n        index < currentPage * pageSize\r\n      ) {\r\n        return {\r\n          ...call,\r\n          selected: data.checked\r\n        };\r\n      } else {\r\n        return {\r\n          ...call\r\n        };\r\n      }\r\n    });\r\n\r\n    const paginatedCalls = callsNew.slice(\r\n      (currentPage - 1) * pageSize,\r\n      currentPage * pageSize\r\n    );\r\n\r\n    this.setState({\r\n      calls: callsNew,\r\n      paginatedCalls\r\n    });\r\n\r\n    const { onRowsToggle } = this.props;\r\n    onRowsToggle && onRowsToggle(this.getSelectedCallIds(callsNew));\r\n  }\r\n\r\n  renderRow(call) {\r\n    return (\r\n      <Table.Row key={call.call_id}>\r\n        <Table.Cell>\r\n          <Checkbox\r\n            checked={call.selected}\r\n            onChange={(event, data) => this.onRowToggle(data, call)}\r\n          />\r\n        </Table.Cell>\r\n        <Table.Cell>{call.call_id}</Table.Cell>\r\n        <Table.Cell>\r\n          {this.renderLabels(call.call_id, call.label_id)}\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    return (\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>\r\n            <Checkbox onChange={(e, data) => this.onAllRowsToggle(data)} />\r\n          </Table.HeaderCell>\r\n          <Table.HeaderCell>Call Id</Table.HeaderCell>\r\n          <Table.HeaderCell>Labels</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n    );\r\n  }\r\n\r\n  onPageChange(event, data) {\r\n    const { calls, pageSize } = this.state;\r\n    console.log(data);\r\n    const activePage = data.activePage;\r\n    const paginatedCalls = calls.slice(\r\n      (activePage - 1) * pageSize,\r\n      activePage * pageSize\r\n    );\r\n    this.setState({ currentPage: data.activePage, paginatedCalls });\r\n    const { onPageChange } = this.props;\r\n    onPageChange && onPageChange(data.activePage);\r\n  }\r\n\r\n  renderFooter() {\r\n    const { totalPages, currentPage } = this.state;\r\n    return (\r\n      <Pagination\r\n        totalPages={totalPages}\r\n        activePage={currentPage}\r\n        onPageChange={this.onPageChange}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderCallsList() {\r\n    const { loading, error, paginatedCalls } = this.state;\r\n    if (loading) {\r\n      return \"Loading Calls list...\";\r\n    } else if (error) {\r\n      return \"There was an error loading calls list\";\r\n    } else {\r\n      return (\r\n        <Table celled>\r\n          {this.renderHeader()}\r\n          <Table.Body>\r\n            {paginatedCalls.map(call => this.renderRow(call))}\r\n          </Table.Body>\r\n          <Table.Footer>\r\n            <Table.Row>\r\n              <Table.HeaderCell colSpan=\"3\">\r\n                {this.renderFooter()}\r\n              </Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Footer>\r\n        </Table>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"LabelledCallsList\">{this.renderCallsList()}</div>;\r\n  }\r\n}\r\n\r\nexport default LabelledCallsList;\r\n","import React from \"react\";\r\nimport { getListOfLabels, applyLabels } from \"../utils/api-utils\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nclass LabelsList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      error: false,\r\n      labels: []\r\n    };\r\n\r\n    this.onLabelsSelected = this.onLabelsSelected.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    getListOfLabels().then(response => {\r\n      this.setState({\r\n        loading: false,\r\n        labels: response.data.data.unique_label_list\r\n      });\r\n    });\r\n  }\r\n\r\n  createOptions() {\r\n    const { labels } = this.state;\r\n    return labels.map(label => {\r\n      return {\r\n        key: label,\r\n        text: label,\r\n        value: label\r\n      };\r\n    });\r\n  }\r\n\r\n  onLabelsSelected(event, data) {\r\n    const { onLabelsSelected } = this.props;\r\n    onLabelsSelected && onLabelsSelected(data.value);\r\n  }\r\n\r\n  renderLabels() {\r\n    const { loading, error } = this.state;\r\n    if (loading) {\r\n      return \"Loading Labels list...\";\r\n    } else if (error) {\r\n      return \"There was an error fetching labels list\";\r\n    } else {\r\n      return (\r\n        <Dropdown\r\n          placeholder=\"Select Labels\"\r\n          fluid\r\n          multiple\r\n          search\r\n          selection\r\n          options={this.createOptions()}\r\n          onChange={this.onLabelsSelected}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.renderLabels();\r\n  }\r\n}\r\n\r\nexport default LabelsList;\r\n","import React from \"react\";\r\nimport LabelledCallsList from \"../labelled-calls-list/LabelledCallsList\";\r\nimport LabelsList from \"../labels-list/LabelsList\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport \"./LabelCalls.css\";\r\nimport { applyLabels } from \"../utils/api-utils\";\r\n\r\nclass LabelCalls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedCalls: [],\r\n      selectedLabels: [],\r\n      reloadSwitch: 0,\r\n      currentPage: 1\r\n    };\r\n\r\n    this.onAdd = this.onAdd.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onRowsToggle = this.onRowsToggle.bind(this);\r\n    this.onLabelsSelected = this.onLabelsSelected.bind(this);\r\n    this.onPageChange = this.onPageChange.bind(this);\r\n  }\r\n\r\n  onRowsToggle(selectedCalls) {\r\n    this.setState({ selectedCalls });\r\n    this.setState({\r\n      isEnabled: this.isEnabled(selectedCalls, this.state.selectedLabels)\r\n    });\r\n  }\r\n\r\n  onLabelsSelected(selectedLabels) {\r\n    this.setState({ selectedLabels });\r\n    this.setState({\r\n      isEnabled: this.isEnabled(this.state.selectedCalls, selectedLabels)\r\n    });\r\n  }\r\n\r\n  onPageChange(page) {\r\n    this.setState({ currentPage: page });\r\n  }\r\n\r\n  onAdd() {\r\n    const { selectedCalls, reloadSwitch } = this.state;\r\n    const labelOps = this.createLabelOps(\"add\");\r\n    applyLabels(selectedCalls, labelOps).then(response => {\r\n      console.log(\"successfully applied\");\r\n      if (reloadSwitch) {\r\n        this.setState({ reloadSwitch: 0 });\r\n      } else {\r\n        this.setState({ reloadSwitch: 1 });\r\n      }\r\n    });\r\n  }\r\n\r\n  onRemove() {\r\n    const { selectedCalls, reloadSwitch } = this.state;\r\n    const labelOps = this.createLabelOps(\"remove\");\r\n    applyLabels(selectedCalls, labelOps).then(response => {\r\n      console.log(\"successfully removed\");\r\n      if (reloadSwitch) {\r\n        this.setState({ reloadSwitch: 0 });\r\n      } else {\r\n        this.setState({ reloadSwitch: 1 });\r\n      }\r\n    });\r\n  }\r\n\r\n  createLabelOps(action) {\r\n    const { selectedLabels } = this.state;\r\n    const labelOps = [];\r\n    if (action === \"add\") {\r\n      for (let i = 0; i < selectedLabels.length; i++) {\r\n        const labelOp = {\r\n          name: selectedLabels[i],\r\n          op: \"add\"\r\n        };\r\n\r\n        labelOps.push(labelOp);\r\n      }\r\n    } else if (action === \"remove\") {\r\n      for (let i = 0; i < selectedLabels.length; i++) {\r\n        const labelOp = {\r\n          name: selectedLabels[i],\r\n          op: \"remove\"\r\n        };\r\n\r\n        labelOps.push(labelOp);\r\n      }\r\n    }\r\n\r\n    return labelOps;\r\n  }\r\n\r\n  isEnabled(selectedCalls, selectedLabels) {\r\n    return selectedCalls.length > 0 && selectedLabels.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isEnabled, reloadSwitch, currentPage } = this.state;\r\n    return (\r\n      <div className=\"LabelCalls\">\r\n        <div className=\"LabelCalls__sidebar\">\r\n          <div className=\"LabelCalls__labels\">\r\n            <LabelsList onLabelsSelected={this.onLabelsSelected} />\r\n          </div>\r\n          <div className=\"LabelCalls__actions Actions\">\r\n            <Button\r\n              onClick={this.onAdd}\r\n              disabled={!isEnabled}\r\n              className=\"Actions__add\"\r\n            >\r\n              Add\r\n            </Button>\r\n            <Button\r\n              onClick={this.onRemove}\r\n              disabled={!isEnabled}\r\n              className=\"Actions__remove\"\r\n            >\r\n              Remove\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"LabelCalls__calls\">\r\n          <LabelledCallsList\r\n            onRowsToggle={this.onRowsToggle}\r\n            key={reloadSwitch}\r\n            initialPage={currentPage}\r\n            onPageChange={this.onPageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabelCalls;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <Link to=\"/filter\" className=\"Home__link\">\r\n          Filtered Calls\r\n        </Link>\r\n        <Link to=\"/label\" className=\"Home__link\">\r\n          Label Calls\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport FilteredCalls from \"./filtered-calls/FilteredCalls\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LabelCalls from \"./label-calls/LabelCalls\";\nimport Home from \"./home/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/filter\" component={FilteredCalls} />\n          <Route path=\"/label\" component={LabelCalls} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}